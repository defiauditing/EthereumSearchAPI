<div>Compiled with solc</div><br><div>Number of lines: 1251 (+ 0 in dependencies, + 0 in tests)</div><br><div>Number of assembly lines: 0</div><br><div>Number of contracts: 13 (+ 0 in dependencies, + 0 tests) </div><br><div>Number of optimization issues: 11</div><br><div>Number of informational issues: 43</div><br><div>Number of low issues: 4</div><br><div>Number of medium issues: 1</div><br><div>Number of high issues: 0</div><br><div>ERCs: ERC165, ERC721</div><br><div>./files/fady-1652350000.sol analyzed (13 contracts)</div><br><table class="table" width="100%" border="1"><thead><tr><th  scope='col' width='15%' >       Name      </th><th  scope='col' width='15%' > # functions </th><th  scope='col' width='15%' >      ERCS     </th><th  scope='col' width='15%' > ERC20 info </th><th  scope='col' width='15%' > Complex code </th><th  scope='col' width='15%' >   Features   </th></tr></thead><tbody><tr><th scope='row' >     Counters    </th><th scope='row' >      4      </th><th scope='row' >               </th><th scope='row' >            </th><th scope='row' >      No      </th><th scope='row' >              </th></tr><tr><th scope='row' >     Strings     </th><th scope='row' >      4      </th><th scope='row' >               </th><th scope='row' >            </th><th scope='row' >     Yes      </th><th scope='row' >              </th></tr><tr><th scope='row' >     Address     </th><th scope='row' >      11     </th><th scope='row' >               </th><th scope='row' >            </th><th scope='row' >      No      </th><th scope='row' >   Send ETH   </th></tr><tr><th scope='row' >                 </th><th scope='row' >             </th><th scope='row' >               </th><th scope='row' >            </th><th scope='row' >              </th><th scope='row' > Delegatecall </th></tr><tr><th scope='row' >                 </th><th scope='row' >             </th><th scope='row' >               </th><th scope='row' >            </th><th scope='row' >              </th><th scope='row' >   Assembly   </th></tr><tr><th scope='row' > IERC721Receiver </th><th scope='row' >      1      </th><th scope='row' >               </th><th scope='row' >            </th><th scope='row' >      No      </th><th scope='row' >              </th></tr><tr><th scope='row' >   TimeSyncNFT   </th><th scope='row' >      57     </th><th scope='row' > ERC165,ERC721 </th><th scope='row' >            </th><th scope='row' >      No      </th><th scope='row' >   Assembly   </th></tr></tbody>'</table><br><div></div><br><div>+ Contract Counters (Most derived contract)</div><br><div>  - From Counters</div><br><div>    - current(Counters.Counter) (internal)</div><br><div>    - decrement(Counters.Counter) (internal)</div><br><div>    - increment(Counters.Counter) (internal)</div><br><div>    - reset(Counters.Counter) (internal)</div><br><div></div><br><div>+ Contract Strings (Most derived contract)</div><br><div>  - From Strings</div><br><div>    - toHexString(uint256) (internal)</div><br><div>    - toHexString(uint256,uint256) (internal)</div><br><div>    - toString(uint256) (internal)</div><br><div></div><br><div>+ Contract Context</div><br><div>  - From Context</div><br><div>    - _msgData() (internal)</div><br><div>    - _msgSender() (internal)</div><br><div></div><br><div>+ Contract Ownable</div><br><div>  - From Context</div><br><div>    - _msgData() (internal)</div><br><div>    - _msgSender() (internal)</div><br><div>  - From Ownable</div><br><div>    - _transferOwnership(address) (internal)</div><br><div>    - constructor() (internal)</div><br><div>    - owner() (public)</div><br><div>    - renounceOwnership() (public)</div><br><div>    - transferOwnership(address) (public)</div><br><div></div><br><div>+ Contract Address (Most derived contract)</div><br><div>  - From Address</div><br><div>    - functionCall(address,bytes) (internal)</div><br><div>    - functionCall(address,bytes,string) (internal)</div><br><div>    - functionCallWithValue(address,bytes,uint256) (internal)</div><br><div>    - functionCallWithValue(address,bytes,uint256,string) (internal)</div><br><div>    - functionDelegateCall(address,bytes) (internal)</div><br><div>    - functionDelegateCall(address,bytes,string) (internal)</div><br><div>    - functionStaticCall(address,bytes) (internal)</div><br><div>    - functionStaticCall(address,bytes,string) (internal)</div><br><div>    - isContract(address) (internal)</div><br><div>    - sendValue(address,uint256) (internal)</div><br><div>    - verifyCallResult(bool,bytes,string) (internal)</div><br><div></div><br><div>+ Contract IERC721Receiver (Most derived contract)</div><br><div>  - From IERC721Receiver</div><br><div>    - onERC721Received(address,address,uint256,bytes) (external)</div><br><div></div><br><div>+ Contract IERC165</div><br><div>  - From IERC165</div><br><div>    - supportsInterface(bytes4) (external)</div><br><div></div><br><div>+ Contract ERC165</div><br><div>  - From ERC165</div><br><div>    - supportsInterface(bytes4) (public)</div><br><div></div><br><div>+ Contract IERC721</div><br><div>  - From IERC165</div><br><div>    - supportsInterface(bytes4) (external)</div><br><div>  - From IERC721</div><br><div>    - approve(address,uint256) (external)</div><br><div>    - balanceOf(address) (external)</div><br><div>    - getApproved(uint256) (external)</div><br><div>    - isApprovedForAll(address,address) (external)</div><br><div>    - ownerOf(uint256) (external)</div><br><div>    - safeTransferFrom(address,address,uint256) (external)</div><br><div>    - safeTransferFrom(address,address,uint256,bytes) (external)</div><br><div>    - setApprovalForAll(address,bool) (external)</div><br><div>    - transferFrom(address,address,uint256) (external)</div><br><div></div><br><div>+ Contract IERC721Metadata</div><br><div>  - From IERC721</div><br><div>    - approve(address,uint256) (external)</div><br><div>    - balanceOf(address) (external)</div><br><div>    - getApproved(uint256) (external)</div><br><div>    - isApprovedForAll(address,address) (external)</div><br><div>    - ownerOf(uint256) (external)</div><br><div>    - safeTransferFrom(address,address,uint256) (external)</div><br><div>    - safeTransferFrom(address,address,uint256,bytes) (external)</div><br><div>    - setApprovalForAll(address,bool) (external)</div><br><div>    - transferFrom(address,address,uint256) (external)</div><br><div>  - From IERC165</div><br><div>    - supportsInterface(bytes4) (external)</div><br><div>  - From IERC721Metadata</div><br><div>    - name() (external)</div><br><div>    - symbol() (external)</div><br><div>    - tokenURI(uint256) (external)</div><br><div></div><br><div>+ Contract ERC721</div><br><div>  - From Context</div><br><div>    - _msgData() (internal)</div><br><div>    - _msgSender() (internal)</div><br><div>  - From ERC721</div><br><div>    - _approve(address,uint256) (internal)</div><br><div>    - _baseURI() (internal)</div><br><div>    - _beforeTokenTransfer(address,address,uint256) (internal)</div><br><div>    - _burn(uint256) (internal)</div><br><div>    - _checkOnERC721Received(address,address,uint256,bytes) (private)</div><br><div>    - _exists(uint256) (internal)</div><br><div>    - _isApprovedOrOwner(address,uint256) (internal)</div><br><div>    - _mint(address,uint256) (internal)</div><br><div>    - _safeMint(address,uint256) (internal)</div><br><div>    - _safeMint(address,uint256,bytes) (internal)</div><br><div>    - _safeTransfer(address,address,uint256,bytes) (internal)</div><br><div>    - _setApprovalForAll(address,address,bool) (internal)</div><br><div>    - _transfer(address,address,uint256) (internal)</div><br><div>    - approve(address,uint256) (public)</div><br><div>    - balanceOf(address) (public)</div><br><div>    - constructor(string,string) (public)</div><br><div>    - getApproved(uint256) (public)</div><br><div>    - isApprovedForAll(address,address) (public)</div><br><div>    - name() (public)</div><br><div>    - ownerOf(uint256) (public)</div><br><div>    - safeTransferFrom(address,address,uint256) (public)</div><br><div>    - safeTransferFrom(address,address,uint256,bytes) (public)</div><br><div>    - setApprovalForAll(address,bool) (public)</div><br><div>    - supportsInterface(bytes4) (public)</div><br><div>    - symbol() (public)</div><br><div>    - tokenURI(uint256) (public)</div><br><div>    - transferFrom(address,address,uint256) (public)</div><br><div></div><br><div>+ Contract ERC721URIStorage</div><br><div>  - From ERC721</div><br><div>    - _approve(address,uint256) (internal)</div><br><div>    - _baseURI() (internal)</div><br><div>    - _beforeTokenTransfer(address,address,uint256) (internal)</div><br><div>    - _checkOnERC721Received(address,address,uint256,bytes) (private)</div><br><div>    - _exists(uint256) (internal)</div><br><div>    - _isApprovedOrOwner(address,uint256) (internal)</div><br><div>    - _mint(address,uint256) (internal)</div><br><div>    - _safeMint(address,uint256) (internal)</div><br><div>    - _safeMint(address,uint256,bytes) (internal)</div><br><div>    - _safeTransfer(address,address,uint256,bytes) (internal)</div><br><div>    - _setApprovalForAll(address,address,bool) (internal)</div><br><div>    - _transfer(address,address,uint256) (internal)</div><br><div>    - approve(address,uint256) (public)</div><br><div>    - balanceOf(address) (public)</div><br><div>    - constructor(string,string) (public)</div><br><div>    - getApproved(uint256) (public)</div><br><div>    - isApprovedForAll(address,address) (public)</div><br><div>    - name() (public)</div><br><div>    - ownerOf(uint256) (public)</div><br><div>    - safeTransferFrom(address,address,uint256) (public)</div><br><div>    - safeTransferFrom(address,address,uint256,bytes) (public)</div><br><div>    - setApprovalForAll(address,bool) (public)</div><br><div>    - supportsInterface(bytes4) (public)</div><br><div>    - symbol() (public)</div><br><div>    - transferFrom(address,address,uint256) (public)</div><br><div>  - From Context</div><br><div>    - _msgData() (internal)</div><br><div>    - _msgSender() (internal)</div><br><div>  - From ERC721URIStorage</div><br><div>    - _burn(uint256) (internal)</div><br><div>    - _setTokenURI(uint256,string) (internal)</div><br><div>    - tokenURI(uint256) (public)</div><br><div></div><br><div>+ Contract TimeSyncNFT (Most derived contract)</div><br><div>  - From Ownable</div><br><div>    - _transferOwnership(address) (internal)</div><br><div>    - owner() (public)</div><br><div>    - renounceOwnership() (public)</div><br><div>    - transferOwnership(address) (public)</div><br><div>  - From Context</div><br><div>    - _msgData() (internal)</div><br><div>    - _msgSender() (internal)</div><br><div>  - From ERC721URIStorage</div><br><div>    - _setTokenURI(uint256,string) (internal)</div><br><div>  - From ERC721</div><br><div>    - _approve(address,uint256) (internal)</div><br><div>    - _beforeTokenTransfer(address,address,uint256) (internal)</div><br><div>    - _checkOnERC721Received(address,address,uint256,bytes) (private)</div><br><div>    - _exists(uint256) (internal)</div><br><div>    - _isApprovedOrOwner(address,uint256) (internal)</div><br><div>    - _mint(address,uint256) (internal)</div><br><div>    - _safeMint(address,uint256) (internal)</div><br><div>    - _safeMint(address,uint256,bytes) (internal)</div><br><div>    - _safeTransfer(address,address,uint256,bytes) (internal)</div><br><div>    - _setApprovalForAll(address,address,bool) (internal)</div><br><div>    - _transfer(address,address,uint256) (internal)</div><br><div>    - approve(address,uint256) (public)</div><br><div>    - balanceOf(address) (public)</div><br><div>    - constructor(string,string) (public)</div><br><div>    - getApproved(uint256) (public)</div><br><div>    - isApprovedForAll(address,address) (public)</div><br><div>    - name() (public)</div><br><div>    - ownerOf(uint256) (public)</div><br><div>    - safeTransferFrom(address,address,uint256) (public)</div><br><div>    - safeTransferFrom(address,address,uint256,bytes) (public)</div><br><div>    - setApprovalForAll(address,bool) (public)</div><br><div>    - supportsInterface(bytes4) (public)</div><br><div>    - symbol() (public)</div><br><div>    - transferFrom(address,address,uint256) (public)</div><br><div>  - From TimeSyncNFT</div><br><div>    - _baseURI() (internal)</div><br><div>    - _burn(uint256) (internal)</div><br><div>    - constructor() (public)</div><br><div>    - safeMint(address,string) (public)</div><br><div>    - setTokenURI(uint256,string) (public)</div><br><div>    - tokenURI(uint256) (public)</div><br><div></div><br><div>./files/fady-1652350000.sol analyzed (13 contracts)</div><br><div>Contract Counters</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract Strings</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract Context</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract Ownable</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function      </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     _msgSender     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _msgData      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    constructor     </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       owner        </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > renounceOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > transferOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _transferOwnership </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract Address</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function      </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     _msgSender     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _msgData      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    constructor     </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       owner        </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > renounceOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > transferOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _transferOwnership </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function       </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >       isContract      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       sendValue       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    verifyCallResult   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract IERC721Receiver</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function      </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     _msgSender     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _msgData      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    constructor     </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       owner        </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > renounceOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > transferOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _transferOwnership </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function       </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >       isContract      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       sendValue       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    verifyCallResult   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > onERC721Received </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract IERC165</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function      </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     _msgSender     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _msgData      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    constructor     </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       owner        </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > renounceOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > transferOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _transferOwnership </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function       </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >       isContract      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       sendValue       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    verifyCallResult   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > onERC721Received </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract ERC165</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function      </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     _msgSender     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _msgData      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    constructor     </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       owner        </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > renounceOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > transferOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _transferOwnership </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function       </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >       isContract      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       sendValue       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    verifyCallResult   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > onERC721Received </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract IERC721</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function      </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     _msgSender     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _msgData      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    constructor     </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       owner        </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > renounceOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > transferOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _transferOwnership </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function       </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >       isContract      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       sendValue       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    verifyCallResult   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > onERC721Received </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     balanceOf     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      ownerOf      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    transferFrom   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      approve      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    getApproved    </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > setApprovalForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  isApprovedForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract IERC721Metadata</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function      </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     _msgSender     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _msgData      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    constructor     </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       owner        </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > renounceOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > transferOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _transferOwnership </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function       </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >       isContract      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       sendValue       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    verifyCallResult   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > onERC721Received </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     balanceOf     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      ownerOf      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    transferFrom   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      approve      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    getApproved    </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > setApprovalForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  isApprovedForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     balanceOf     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      ownerOf      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    transferFrom   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      approve      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    getApproved    </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > setApprovalForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  isApprovedForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        name       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       symbol      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      tokenURI     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract ERC721</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function      </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     _msgSender     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _msgData      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    constructor     </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       owner        </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > renounceOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > transferOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _transferOwnership </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function       </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >       isContract      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       sendValue       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    verifyCallResult   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > onERC721Received </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     balanceOf     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      ownerOf      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    transferFrom   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      approve      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    getApproved    </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > setApprovalForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  isApprovedForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     balanceOf     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      ownerOf      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    transferFrom   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      approve      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    getApproved    </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > setApprovalForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  isApprovedForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        name       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       symbol      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      tokenURI     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function        </th><th scope='row' >           State variables written           </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _msgSender       </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _msgData        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      constructor       </th><th scope='row' >             ['_symbol', '_name']            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _baseURI        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >             ['_tokenApprovals']             </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >            ['_operatorApprovals']           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     _safeTransfer      </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _exists         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _isApprovedOrOwner   </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >           ['_balances', '_owners']          </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >           ['_balances', '_owners']          </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _mint          </th><th scope='row' >           ['_balances', '_owners']          </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _burn          </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _transfer        </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _approve        </th><th scope='row' >             ['_tokenApprovals']             </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _setApprovalForAll   </th><th scope='row' >            ['_operatorApprovals']           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _checkOnERC721Received </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _beforeTokenTransfer  </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract ERC721URIStorage</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function      </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     _msgSender     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _msgData      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    constructor     </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       owner        </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > renounceOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > transferOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _transferOwnership </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function       </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >       isContract      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       sendValue       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    verifyCallResult   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > onERC721Received </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     balanceOf     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      ownerOf      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    transferFrom   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      approve      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    getApproved    </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > setApprovalForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  isApprovedForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     balanceOf     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      ownerOf      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    transferFrom   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      approve      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    getApproved    </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > setApprovalForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  isApprovedForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        name       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       symbol      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      tokenURI     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function        </th><th scope='row' >           State variables written           </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _msgSender       </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _msgData        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      constructor       </th><th scope='row' >             ['_symbol', '_name']            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _baseURI        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >             ['_tokenApprovals']             </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >            ['_operatorApprovals']           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     _safeTransfer      </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _exists         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _isApprovedOrOwner   </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >           ['_balances', '_owners']          </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >           ['_balances', '_owners']          </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _mint          </th><th scope='row' >           ['_balances', '_owners']          </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _burn          </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _transfer        </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _approve        </th><th scope='row' >             ['_tokenApprovals']             </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _setApprovalForAll   </th><th scope='row' >            ['_operatorApprovals']           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _checkOnERC721Received </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _beforeTokenTransfer  </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function        </th><th scope='row' >                  State variables written                  </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >      constructor       </th><th scope='row' >                    ['_symbol', '_name']                   </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _baseURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >                    ['_tokenApprovals']                    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >                   ['_operatorApprovals']                  </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     _safeTransfer      </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _exists         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _isApprovedOrOwner   </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >                  ['_balances', '_owners']                 </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >                  ['_balances', '_owners']                 </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _mint          </th><th scope='row' >                  ['_balances', '_owners']                 </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _burn          </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _transfer        </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _approve        </th><th scope='row' >                    ['_tokenApprovals']                    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _setApprovalForAll   </th><th scope='row' >                   ['_operatorApprovals']                  </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _checkOnERC721Received </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _beforeTokenTransfer  </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _msgSender       </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _msgData        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _setTokenURI      </th><th scope='row' >                       ['_tokenURIs']                      </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _burn          </th><th scope='row' > ['_balances', '_owners', '_tokenURIs', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr></tbody>'</table><div>Contract TimeSyncNFT</div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='20%' >  Function </th><th scope='col' width='60%' > State variables written </th><th scope='col' width='20%' > Conditions on msg.sender </th></tr></thead><tbody><tr><th scope='row' >  current  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > increment </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > decrement </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   reset   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >               Function              </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >               toString              </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >             toHexString             </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > slitherConstructorConstantVariables </th><th scope='row' >     ['_HEX_SYMBOLS']    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  Function  </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > _msgSender </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _msgData  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function      </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     _msgSender     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _msgData      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    constructor     </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       owner        </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > renounceOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > transferOwnership  </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _transferOwnership </th><th scope='row' >        ['_owner']       </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function       </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >       isContract      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       sendValue       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      functionCall     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > functionCallWithValue </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   functionStaticCall  </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  functionDelegateCall </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    verifyCallResult   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > onERC721Received </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     balanceOf     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      ownerOf      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    transferFrom   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      approve      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    getApproved    </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > setApprovalForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  isApprovedForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      Function     </th><th scope='row' > State variables written </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >     balanceOf     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      ownerOf      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    transferFrom   </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      approve      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    getApproved    </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > setApprovalForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  isApprovedForAll </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  safeTransferFrom </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > supportsInterface </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        name       </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       symbol      </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      tokenURI     </th><th scope='row' >            []           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function        </th><th scope='row' >           State variables written           </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _msgSender       </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _msgData        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      constructor       </th><th scope='row' >             ['_symbol', '_name']            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _baseURI        </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >             ['_tokenApprovals']             </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >            ['_operatorApprovals']           </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     _safeTransfer      </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _exists         </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _isApprovedOrOwner   </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >           ['_balances', '_owners']          </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >           ['_balances', '_owners']          </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _mint          </th><th scope='row' >           ['_balances', '_owners']          </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _burn          </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _transfer        </th><th scope='row' > ['_balances', '_owners', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _approve        </th><th scope='row' >             ['_tokenApprovals']             </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _setApprovalForAll   </th><th scope='row' >            ['_operatorApprovals']           </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _checkOnERC721Received </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _beforeTokenTransfer  </th><th scope='row' >                      []                     </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function        </th><th scope='row' >                  State variables written                  </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >      constructor       </th><th scope='row' >                    ['_symbol', '_name']                   </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _baseURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >                    ['_tokenApprovals']                    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >                   ['_operatorApprovals']                  </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     _safeTransfer      </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _exists         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _isApprovedOrOwner   </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >                  ['_balances', '_owners']                 </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >                  ['_balances', '_owners']                 </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _mint          </th><th scope='row' >                  ['_balances', '_owners']                 </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _burn          </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _transfer        </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _approve        </th><th scope='row' >                    ['_tokenApprovals']                    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _setApprovalForAll   </th><th scope='row' >                   ['_operatorApprovals']                  </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _checkOnERC721Received </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _beforeTokenTransfer  </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _msgSender       </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _msgData        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _setTokenURI      </th><th scope='row' >                       ['_tokenURIs']                      </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _burn          </th><th scope='row' > ['_balances', '_owners', '_tokenURIs', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        Function        </th><th scope='row' >                  State variables written                  </th><th scope='row' > Conditions on msg.sender </th></tr><tr><th scope='row' >      constructor       </th><th scope='row' >                         ['_owner']                        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         owner          </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   renounceOwnership    </th><th scope='row' >                         ['_owner']                        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   transferOwnership    </th><th scope='row' >                         ['_owner']                        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _transferOwnership   </th><th scope='row' >                         ['_owner']                        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _msgSender       </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _msgData        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      _setTokenURI      </th><th scope='row' >                       ['_tokenURIs']                      </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _burn          </th><th scope='row' > ['_balances', '_owners', '_tokenURIs', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      constructor       </th><th scope='row' >                    ['_symbol', '_name']                   </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _baseURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >                    ['_tokenApprovals']                    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >                   ['_operatorApprovals']                  </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >     _safeTransfer      </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _exists         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _isApprovedOrOwner   </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >                  ['_balances', '_owners']                 </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _safeMint        </th><th scope='row' >                  ['_balances', '_owners']                 </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _mint          </th><th scope='row' >                  ['_balances', '_owners']                 </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _burn          </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       _transfer        </th><th scope='row' >        ['_balances', '_owners', '_tokenApprovals']        </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _approve        </th><th scope='row' >                    ['_tokenApprovals']                    </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   _setApprovalForAll   </th><th scope='row' >                   ['_operatorApprovals']                  </th><th scope='row' >            []            </th></tr><tr><th scope='row' > _checkOnERC721Received </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >  _beforeTokenTransfer  </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >          name          </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         symbol         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >       balanceOf        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        ownerOf         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      transferFrom      </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        approve         </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      getApproved       </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   setApprovalForAll    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    isApprovedForAll    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >    safeTransferFrom    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >   supportsInterface    </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      constructor       </th><th scope='row' >                    ['_symbol', '_name']                   </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        _baseURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr><tr><th scope='row' >      setTokenURI       </th><th scope='row' >                       ['_tokenURIs']                      </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        safeMint        </th><th scope='row' >           ['_balances', '_owners', '_tokenURIs']          </th><th scope='row' >            []            </th></tr><tr><th scope='row' >         _burn          </th><th scope='row' > ['_balances', '_owners', '_tokenURIs', '_tokenApprovals'] </th><th scope='row' >            []            </th></tr><tr><th scope='row' >        tokenURI        </th><th scope='row' >                             []                            </th><th scope='row' >            []            </th></tr></tbody>'</table><div>./files/fady-1652350000.sol analyzed (13 contracts)</div><br><table class="table" width="100%" border="1"><tbody></tbody>'</table><div>Contract Counters</div><br><div>Contract vars: []</div><br><div>Inheritance:: []</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >           Function          </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' >      Internal Calls      </th><th scope='col' width='25%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >  current(Counters.Counter)  </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >            []            </th><th scope='row' >       []       </th></tr><tr><th scope='row' > increment(Counters.Counter) </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >            []            </th><th scope='row' >       []       </th></tr><tr><th scope='row' > decrement(Counters.Counter) </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' > ['require(bool,string)'] </th><th scope='row' >       []       </th></tr><tr><th scope='row' >   reset(Counters.Counter)   </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >            []            </th><th scope='row' >       []       </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract Strings</div><br><div>Contract vars: ['_HEX_SYMBOLS']</div><br><div>Inheritance:: []</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >                Function               </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' >       Read       </th><th scope='col' width='10%' >      Write       </th><th scope='col' width='10%' >      Internal Calls      </th><th scope='col' width='25%' >         External Calls        </th></tr></thead><tbody><tr><th scope='row' >           toString(uint256)           </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >        []        </th><th scope='row' >        []        </th><th scope='row' >            []            </th><th scope='row' >     ['new bytes(digits)']     </th></tr><tr><th scope='row' >          toHexString(uint256)         </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >        []        </th><th scope='row' >        []        </th><th scope='row' >     ['toHexString']      </th><th scope='row' >               []              </th></tr><tr><th scope='row' >      toHexString(uint256,uint256)     </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' > ['_HEX_SYMBOLS'] </th><th scope='row' >        []        </th><th scope='row' > ['require(bool,string)'] </th><th scope='row' > ['new bytes(2 * length + 2)'] </th></tr><tr><th scope='row' > slitherConstructorConstantVariables() </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >        []        </th><th scope='row' > ['_HEX_SYMBOLS'] </th><th scope='row' >            []            </th><th scope='row' >               []              </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract Context</div><br><div>Contract vars: []</div><br><div>Inheritance:: []</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >   Function   </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' >      Read      </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='25%' > External Calls </th></tr></thead><tbody><tr><th scope='row' > _msgSender() </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' > ['msg.sender'] </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >  _msgData()  </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >  ['msg.data']  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract Ownable</div><br><div>Contract vars: ['_owner']</div><br><div>Inheritance:: ['Context']</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >           Function          </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' >   Modifiers   </th><th scope='col' width='10%' >      Read      </th><th scope='col' width='10%' >   Write    </th><th scope='col' width='10%' >                 Internal Calls                 </th><th scope='col' width='25%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >         _msgSender()        </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' > ['msg.sender'] </th><th scope='row' >     []     </th><th scope='row' >                       []                       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >          _msgData()         </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >  ['msg.data']  </th><th scope='row' >     []     </th><th scope='row' >                       []                       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >        constructor()        </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >       []       </th><th scope='row' >     []     </th><th scope='row' >      ['_msgSender', '_transferOwnership']      </th><th scope='row' >       []       </th></tr><tr><th scope='row' >           owner()           </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >   ['_owner']   </th><th scope='row' >     []     </th><th scope='row' >                       []                       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >     renounceOwnership()     </th><th scope='row' >   public   </th><th scope='row' > ['onlyOwner'] </th><th scope='row' >       []       </th><th scope='row' >     []     </th><th scope='row' >      ['_transferOwnership', 'onlyOwner']       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >  transferOwnership(address) </th><th scope='row' >   public   </th><th scope='row' > ['onlyOwner'] </th><th scope='row' >       []       </th><th scope='row' >     []     </th><th scope='row' > ['require(bool,string)', '_transferOwnership'] </th><th scope='row' >       []       </th></tr><tr><th scope='row' >                             </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                </th><th scope='row' >            </th><th scope='row' >                 ['onlyOwner']                  </th><th scope='row' >                </th></tr><tr><th scope='row' > _transferOwnership(address) </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >   ['_owner']   </th><th scope='row' > ['_owner'] </th><th scope='row' >                       []                       </th><th scope='row' >       []       </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >  Modifiers  </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' >             Internal Calls             </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' > onlyOwner() </th><th scope='row' >  internal  </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' > ['_msgSender', 'require(bool,string)'] </th><th scope='row' >       []       </th></tr><tr><th scope='row' >             </th><th scope='row' >            </th><th scope='row' >      </th><th scope='row' >       </th><th scope='row' >               ['owner']                </th><th scope='row' >                </th></tr></tbody>'</table><div>Contract Address</div><br><div>Contract vars: []</div><br><div>Inheritance:: []</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >                       Function                      </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' >   Read   </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' >                 Internal Calls                </th><th scope='col' width='25%' >            External Calls           </th></tr></thead><tbody><tr><th scope='row' >                 isContract(address)                 </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >    []    </th><th scope='row' >   []  </th><th scope='row' >                       []                      </th><th scope='row' >                  []                 </th></tr><tr><th scope='row' >              sendValue(address,uint256)             </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' > ['this'] </th><th scope='row' >   []  </th><th scope='row' >  ['balance(address)', 'require(bool,string)'] </th><th scope='row' > ['recipient.call{value: amount}()'] </th></tr><tr><th scope='row' >             functionCall(address,bytes)             </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >    []    </th><th scope='row' >   []  </th><th scope='row' >                ['functionCall']               </th><th scope='row' >                  []                 </th></tr><tr><th scope='row' >          functionCall(address,bytes,string)         </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >    []    </th><th scope='row' >   []  </th><th scope='row' >           ['functionCallWithValue']           </th><th scope='row' >                  []                 </th></tr><tr><th scope='row' >     functionCallWithValue(address,bytes,uint256)    </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >    []    </th><th scope='row' >   []  </th><th scope='row' >           ['functionCallWithValue']           </th><th scope='row' >                  []                 </th></tr><tr><th scope='row' > functionCallWithValue(address,bytes,uint256,string) </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' > ['this'] </th><th scope='row' >   []  </th><th scope='row' >  ['balance(address)', 'require(bool,string)'] </th><th scope='row' > ['target.call{value: value}(data)'] </th></tr><tr><th scope='row' >                                                     </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >          </th><th scope='row' >       </th><th scope='row' >       ['isContract', 'verifyCallResult']      </th><th scope='row' >                                     </th></tr><tr><th scope='row' >          functionStaticCall(address,bytes)          </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >    []    </th><th scope='row' >   []  </th><th scope='row' >             ['functionStaticCall']            </th><th scope='row' >                  []                 </th></tr><tr><th scope='row' >       functionStaticCall(address,bytes,string)      </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >    []    </th><th scope='row' >   []  </th><th scope='row' >     ['isContract', 'require(bool,string)']    </th><th scope='row' >     ['target.staticcall(data)']     </th></tr><tr><th scope='row' >                                                     </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >          </th><th scope='row' >       </th><th scope='row' >              ['verifyCallResult']             </th><th scope='row' >                                     </th></tr><tr><th scope='row' >         functionDelegateCall(address,bytes)         </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >    []    </th><th scope='row' >   []  </th><th scope='row' >            ['functionDelegateCall']           </th><th scope='row' >                  []                 </th></tr><tr><th scope='row' >      functionDelegateCall(address,bytes,string)     </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >    []    </th><th scope='row' >   []  </th><th scope='row' >     ['isContract', 'require(bool,string)']    </th><th scope='row' >    ['target.delegatecall(data)']    </th></tr><tr><th scope='row' >                                                     </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >          </th><th scope='row' >       </th><th scope='row' >              ['verifyCallResult']             </th><th scope='row' >                                     </th></tr><tr><th scope='row' >         verifyCallResult(bool,bytes,string)         </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >    []    </th><th scope='row' >   []  </th><th scope='row' > ['mload(uint256)', 'revert(uint256,uint256)'] </th><th scope='row' >                  []                 </th></tr><tr><th scope='row' >                                                     </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >          </th><th scope='row' >       </th><th scope='row' >               ['revert(string)']              </th><th scope='row' >                                     </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract IERC721Receiver</div><br><div>Contract vars: []</div><br><div>Inheritance:: []</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >                     Function                    </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='25%' > External Calls </th></tr></thead><tbody><tr><th scope='row' > onERC721Received(address,address,uint256,bytes) </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract IERC165</div><br><div>Contract vars: []</div><br><div>Inheritance:: []</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >          Function         </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='25%' > External Calls </th></tr></thead><tbody><tr><th scope='row' > supportsInterface(bytes4) </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract ERC165</div><br><div>Contract vars: []</div><br><div>Inheritance:: ['IERC165']</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >          Function         </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='25%' > External Calls </th></tr></thead><tbody><tr><th scope='row' > supportsInterface(bytes4) </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' > supportsInterface(bytes4) </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >   ['type()']   </th><th scope='row' >       []       </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract IERC721</div><br><div>Contract vars: []</div><br><div>Inheritance:: ['IERC165']</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >                     Function                    </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='25%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >            supportsInterface(bytes4)            </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >                balanceOf(address)               </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >                 ownerOf(uint256)                </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >    safeTransferFrom(address,address,uint256)    </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >      transferFrom(address,address,uint256)      </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >             approve(address,uint256)            </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >               getApproved(uint256)              </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >         setApprovalForAll(address,bool)         </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >        isApprovedForAll(address,address)        </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' > safeTransferFrom(address,address,uint256,bytes) </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract IERC721Metadata</div><br><div>Contract vars: []</div><br><div>Inheritance:: ['IERC721', 'IERC165']</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >                     Function                    </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='25%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >                balanceOf(address)               </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >                 ownerOf(uint256)                </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >    safeTransferFrom(address,address,uint256)    </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >      transferFrom(address,address,uint256)      </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >             approve(address,uint256)            </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >               getApproved(uint256)              </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >         setApprovalForAll(address,bool)         </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >        isApprovedForAll(address,address)        </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' > safeTransferFrom(address,address,uint256,bytes) </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >            supportsInterface(bytes4)            </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >                      name()                     </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >                     symbol()                    </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr><tr><th scope='row' >                tokenURI(uint256)                </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' >       []       </th><th scope='row' >       []       </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract ERC721</div><br><div>Contract vars: ['_name', '_symbol', '_owners', '_balances', '_tokenApprovals', '_operatorApprovals']</div><br><div>Inheritance:: ['IERC721Metadata', 'IERC721', 'ERC165', 'IERC165', 'Context']</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >                        Function                       </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' >           Read           </th><th scope='col' width='10%' >          Write           </th><th scope='col' width='10%' >                  Internal Calls                  </th><th scope='col' width='25%' >                                        External Calls                                        </th></tr></thead><tbody><tr><th scope='row' >                         name()                        </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                        symbol()                       </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   tokenURI(uint256)                   </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   balanceOf(address)                  </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                    ownerOf(uint256)                   </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >       safeTransferFrom(address,address,uint256)       </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >         transferFrom(address,address,uint256)         </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                approve(address,uint256)               </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                  getApproved(uint256)                 </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >            setApprovalForAll(address,bool)            </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >           isApprovedForAll(address,address)           </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >    safeTransferFrom(address,address,uint256,bytes)    </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               supportsInterface(bytes4)               </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               supportsInterface(bytes4)               </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                    ['type()']                    </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                      _msgSender()                     </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >      ['msg.sender']      </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                       _msgData()                      </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >       ['msg.data']       </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               constructor(string,string)              </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >   ['_name', '_symbol']   </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               supportsInterface(bytes4)               </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >         ['supportsInterface', 'type()']          </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   balanceOf(address)                  </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >      ['_balances']       </th><th scope='row' >            []            </th><th scope='row' >             ['require(bool,string)']             </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                    ownerOf(uint256)                   </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >       ['_owners']        </th><th scope='row' >            []            </th><th scope='row' >             ['require(bool,string)']             </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                         name()                        </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >        ['_name']         </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                        symbol()                       </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >       ['_symbol']        </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   tokenURI(uint256)                   </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >  ['require(bool,string)', 'abi.encodePacked()']  </th><th scope='row' >            ['abi.encodePacked(baseURI,tokenId.toString())', 'tokenId.toString()']            </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >             ['_baseURI', '_exists']              </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                       _baseURI()                      </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                approve(address,uint256)               </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >       ['ownerOf', 'require(bool,string)']        </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >         ['_approve', 'isApprovedForAll']         </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                  ['_msgSender']                  </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                  getApproved(uint256)                 </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >   ['_tokenApprovals']    </th><th scope='row' >            []            </th><th scope='row' >       ['require(bool,string)', '_exists']        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >            setApprovalForAll(address,bool)            </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >       ['_msgSender', '_setApprovalForAll']       </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >           isApprovedForAll(address,address)           </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >  ['_operatorApprovals']  </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >         transferFrom(address,address,uint256)         </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >  ['_isApprovedOrOwner', 'require(bool,string)']  </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >           ['_transfer', '_msgSender']            </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >       safeTransferFrom(address,address,uint256)       </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >               ['safeTransferFrom']               </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >    safeTransferFrom(address,address,uint256,bytes)    </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >  ['_isApprovedOrOwner', 'require(bool,string)']  </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >         ['_safeTransfer', '_msgSender']          </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >      _safeTransfer(address,address,uint256,bytes)     </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >     ['_checkOnERC721Received', '_transfer']      </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >             ['require(bool,string)']             </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                    _exists(uint256)                   </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >       ['_owners']        </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >          _isApprovedOrOwner(address,uint256)          </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >       ['ownerOf', 'require(bool,string)']        </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >            ['getApproved', '_exists']            </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >               ['isApprovedForAll']               </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >               _safeMint(address,uint256)              </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                  ['_safeMint']                   </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >            _safeMint(address,uint256,bytes)           </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >       ['_checkOnERC721Received', '_mint']        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >             ['require(bool,string)']             </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                 _mint(address,uint256)                </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >      ['_balances']       </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' > ['require(bool,string)', '_beforeTokenTransfer'] </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                   ['_exists']                    </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                     _burn(uint256)                    </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' >       ['ownerOf', '_beforeTokenTransfer']        </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                   ['_approve']                   </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >           _transfer(address,address,uint256)          </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >      ['_balances']       </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' >       ['ownerOf', 'require(bool,string)']        </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >       ['_approve', '_beforeTokenTransfer']       </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >               _approve(address,uint256)               </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >   ['_tokenApprovals']    </th><th scope='row' >                   ['ownerOf']                    </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >        _setApprovalForAll(address,address,bool)       </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >  ['_operatorApprovals']  </th><th scope='row' >             ['require(bool,string)']             </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' > _checkOnERC721Received(address,address,uint256,bytes) </th><th scope='row' >  private   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >  ['mload(uint256)', 'revert(uint256,uint256)']   </th><th scope='row' > ['to.isContract()', 'IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data)'] </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >         ['revert(string)', '_msgSender']         </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >     _beforeTokenTransfer(address,address,uint256)     </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                        []                        </th><th scope='row' >                                              []                                              </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract ERC721URIStorage</div><br><div>Contract vars: ['_name', '_symbol', '_owners', '_balances', '_tokenApprovals', '_operatorApprovals', '_tokenURIs']</div><br><div>Inheritance:: ['ERC721', 'IERC721Metadata', 'IERC721', 'ERC165', 'IERC165', 'Context']</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >                        Function                       </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Modifiers </th><th scope='col' width='10%' >           Read           </th><th scope='col' width='10%' >          Write           </th><th scope='col' width='10%' >                   Internal Calls                   </th><th scope='col' width='25%' >                                        External Calls                                        </th></tr></thead><tbody><tr><th scope='row' >               constructor(string,string)              </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >   ['_name', '_symbol']   </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               supportsInterface(bytes4)               </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >          ['type()', 'supportsInterface']           </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   balanceOf(address)                  </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >      ['_balances']       </th><th scope='row' >            []            </th><th scope='row' >              ['require(bool,string)']              </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                    ownerOf(uint256)                   </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >       ['_owners']        </th><th scope='row' >            []            </th><th scope='row' >              ['require(bool,string)']              </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                         name()                        </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >        ['_name']         </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                        symbol()                       </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >       ['_symbol']        </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   tokenURI(uint256)                   </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >        ['_baseURI', 'require(bool,string)']        </th><th scope='row' >            ['abi.encodePacked(baseURI,tokenId.toString())', 'tokenId.toString()']            </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >         ['abi.encodePacked()', '_exists']          </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                       _baseURI()                      </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                approve(address,uint256)               </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >        ['ownerOf', 'require(bool,string)']         </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >          ['_approve', 'isApprovedForAll']          </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                   ['_msgSender']                   </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                  getApproved(uint256)                 </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >   ['_tokenApprovals']    </th><th scope='row' >            []            </th><th scope='row' >        ['require(bool,string)', '_exists']         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >            setApprovalForAll(address,bool)            </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >        ['_setApprovalForAll', '_msgSender']        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >           isApprovedForAll(address,address)           </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >  ['_operatorApprovals']  </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >         transferFrom(address,address,uint256)         </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >   ['require(bool,string)', '_isApprovedOrOwner']   </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >            ['_msgSender', '_transfer']             </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >       safeTransferFrom(address,address,uint256)       </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                ['safeTransferFrom']                </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >    safeTransferFrom(address,address,uint256,bytes)    </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >     ['_safeTransfer', 'require(bool,string)']      </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >        ['_isApprovedOrOwner', '_msgSender']        </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >      _safeTransfer(address,address,uint256,bytes)     </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' > ['require(bool,string)', '_checkOnERC721Received'] </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                   ['_transfer']                    </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                    _exists(uint256)                   </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >       ['_owners']        </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >          _isApprovedOrOwner(address,uint256)          </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >             ['ownerOf', 'getApproved']             </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >        ['require(bool,string)', '_exists']         </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                ['isApprovedForAll']                </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >               _safeMint(address,uint256)              </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                   ['_safeMint']                    </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >            _safeMint(address,uint256,bytes)           </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >         ['require(bool,string)', '_mint']          </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >             ['_checkOnERC721Received']             </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                 _mint(address,uint256)                </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >      ['_balances']       </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' >  ['require(bool,string)', '_beforeTokenTransfer']  </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                    ['_exists']                     </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                     _burn(uint256)                    </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' >              ['_approve', 'ownerOf']               </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >              ['_beforeTokenTransfer']              </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >           _transfer(address,address,uint256)          </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >      ['_balances']       </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' >        ['_approve', 'require(bool,string)']        </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >        ['ownerOf', '_beforeTokenTransfer']         </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >               _approve(address,uint256)               </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >   ['_tokenApprovals']    </th><th scope='row' >                    ['ownerOf']                     </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >        _setApprovalForAll(address,address,bool)       </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >  ['_operatorApprovals']  </th><th scope='row' >              ['require(bool,string)']              </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' > _checkOnERC721Received(address,address,uint256,bytes) </th><th scope='row' >  private   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >   ['mload(uint256)', 'revert(uint256,uint256)']    </th><th scope='row' > ['to.isContract()', 'IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data)'] </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >          ['revert(string)', '_msgSender']          </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >     _beforeTokenTransfer(address,address,uint256)     </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                         name()                        </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                        symbol()                       </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   tokenURI(uint256)                   </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   balanceOf(address)                  </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                    ownerOf(uint256)                   </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >       safeTransferFrom(address,address,uint256)       </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >         transferFrom(address,address,uint256)         </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                approve(address,uint256)               </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                  getApproved(uint256)                 </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >            setApprovalForAll(address,bool)            </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >           isApprovedForAll(address,address)           </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >    safeTransferFrom(address,address,uint256,bytes)    </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               supportsInterface(bytes4)               </th><th scope='row' >  external  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               supportsInterface(bytes4)               </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                     ['type()']                     </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                      _msgSender()                     </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >      ['msg.sender']      </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                       _msgData()                      </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >       ['msg.data']       </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   tokenURI(uint256)                   </th><th scope='row' >   public   </th><th scope='row' >     []    </th><th scope='row' >      ['_tokenURIs']      </th><th scope='row' >            []            </th><th scope='row' >   ['require(bool,string)', 'abi.encodePacked()']   </th><th scope='row' >                             ['abi.encodePacked(base,_tokenURI)']                             </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >              ['_exists', 'tokenURI']               </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >           </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                    ['_baseURI']                    </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >              _setTokenURI(uint256,string)             </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >            []            </th><th scope='row' >      ['_tokenURIs']      </th><th scope='row' >        ['require(bool,string)', '_exists']         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                     _burn(uint256)                    </th><th scope='row' >  internal  </th><th scope='row' >     []    </th><th scope='row' >      ['_tokenURIs']      </th><th scope='row' >      ['_tokenURIs']      </th><th scope='row' >                     ['_burn']                      </th><th scope='row' >                                              []                                              </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' > Modifiers </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' > Internal Calls </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th><th scope='row' >#</th></tr></tbody>'</table><div>Contract TimeSyncNFT</div><br><div>Contract vars: ['_name', '_symbol', '_owners', '_balances', '_tokenApprovals', '_operatorApprovals', '_tokenURIs', '_owner', '_tokenIdCounter']</div><br><div>Inheritance:: ['Ownable', 'ERC721URIStorage', 'ERC721', 'IERC721Metadata', 'IERC721', 'ERC165', 'IERC165', 'Context']</div><br><div> </div><br><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >                        Function                       </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' >   Modifiers   </th><th scope='col' width='10%' >           Read           </th><th scope='col' width='10%' >          Write           </th><th scope='col' width='10%' >                   Internal Calls                   </th><th scope='col' width='25%' >                                        External Calls                                        </th></tr></thead><tbody><tr><th scope='row' >                     constructor()                     </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >        ['_msgSender', '_transferOwnership']        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                        owner()                        </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >        ['_owner']        </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                  renounceOwnership()                  </th><th scope='row' >   public   </th><th scope='row' > ['onlyOwner'] </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >        ['_transferOwnership', 'onlyOwner']         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               transferOwnership(address)              </th><th scope='row' >   public   </th><th scope='row' > ['onlyOwner'] </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >   ['require(bool,string)', '_transferOwnership']   </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                   ['onlyOwner']                    </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >              _transferOwnership(address)              </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >        ['_owner']        </th><th scope='row' >        ['_owner']        </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                      _msgSender()                     </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >      ['msg.sender']      </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                       _msgData()                      </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >       ['msg.data']       </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   tokenURI(uint256)                   </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >      ['_tokenURIs']      </th><th scope='row' >            []            </th><th scope='row' >        ['require(bool,string)', '_exists']         </th><th scope='row' >                             ['abi.encodePacked(base,_tokenURI)']                             </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >         ['tokenURI', 'abi.encodePacked()']         </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                    ['_baseURI']                    </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >              _setTokenURI(uint256,string)             </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >      ['_tokenURIs']      </th><th scope='row' >        ['require(bool,string)', '_exists']         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                     _burn(uint256)                    </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >      ['_tokenURIs']      </th><th scope='row' >      ['_tokenURIs']      </th><th scope='row' >                     ['_burn']                      </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               constructor(string,string)              </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >   ['_name', '_symbol']   </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               supportsInterface(bytes4)               </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >          ['supportsInterface', 'type()']           </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   balanceOf(address)                  </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >      ['_balances']       </th><th scope='row' >            []            </th><th scope='row' >              ['require(bool,string)']              </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                    ownerOf(uint256)                   </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >       ['_owners']        </th><th scope='row' >            []            </th><th scope='row' >              ['require(bool,string)']              </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                         name()                        </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >        ['_name']         </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                        symbol()                       </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >       ['_symbol']        </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   tokenURI(uint256)                   </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >        ['require(bool,string)', '_exists']         </th><th scope='row' >            ['abi.encodePacked(baseURI,tokenId.toString())', 'tokenId.toString()']            </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >         ['_baseURI', 'abi.encodePacked()']         </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                       _baseURI()                      </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                approve(address,uint256)               </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >        ['_approve', 'require(bool,string)']        </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >         ['_msgSender', 'isApprovedForAll']         </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                    ['ownerOf']                     </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                  getApproved(uint256)                 </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >   ['_tokenApprovals']    </th><th scope='row' >            []            </th><th scope='row' >        ['require(bool,string)', '_exists']         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >            setApprovalForAll(address,bool)            </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >        ['_msgSender', '_setApprovalForAll']        </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >           isApprovedForAll(address,address)           </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >  ['_operatorApprovals']  </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >         transferFrom(address,address,uint256)         </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >       ['_msgSender', 'require(bool,string)']       </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >        ['_transfer', '_isApprovedOrOwner']         </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >       safeTransferFrom(address,address,uint256)       </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                ['safeTransferFrom']                </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >    safeTransferFrom(address,address,uint256,bytes)    </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >       ['_msgSender', 'require(bool,string)']       </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >      ['_safeTransfer', '_isApprovedOrOwner']       </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >      _safeTransfer(address,address,uint256,bytes)     </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' > ['_checkOnERC721Received', 'require(bool,string)'] </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                   ['_transfer']                    </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                    _exists(uint256)                   </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >       ['_owners']        </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >          _isApprovedOrOwner(address,uint256)          </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >        ['require(bool,string)', '_exists']         </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >          ['isApprovedForAll', 'ownerOf']           </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                  ['getApproved']                   </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >               _safeMint(address,uint256)              </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                   ['_safeMint']                    </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >            _safeMint(address,uint256,bytes)           </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >        ['_checkOnERC721Received', '_mint']         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >              ['require(bool,string)']              </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                 _mint(address,uint256)                </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >      ['_balances']       </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' >        ['require(bool,string)', '_exists']         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >              ['_beforeTokenTransfer']              </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                     _burn(uint256)                    </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' >        ['_beforeTokenTransfer', '_approve']        </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                    ['ownerOf']                     </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >           _transfer(address,address,uint256)          </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >      ['_balances']       </th><th scope='row' > ['_balances', '_owners'] </th><th scope='row' >  ['_beforeTokenTransfer', 'require(bool,string)']  </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >              ['_approve', 'ownerOf']               </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >               _approve(address,uint256)               </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >   ['_tokenApprovals']    </th><th scope='row' >                    ['ownerOf']                     </th><th scope='row' >                                 ['ERC721.ownerOf(tokenId)']                                  </th></tr><tr><th scope='row' >        _setApprovalForAll(address,address,bool)       </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >  ['_operatorApprovals']  </th><th scope='row' >              ['require(bool,string)']              </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' > _checkOnERC721Received(address,address,uint256,bytes) </th><th scope='row' >  private   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >     ['_msgSender', 'revert(uint256,uint256)']      </th><th scope='row' > ['to.isContract()', 'IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data)'] </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >        ['revert(string)', 'mload(uint256)']        </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >     _beforeTokenTransfer(address,address,uint256)     </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                         name()                        </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                        symbol()                       </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   tokenURI(uint256)                   </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   balanceOf(address)                  </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                    ownerOf(uint256)                   </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >       safeTransferFrom(address,address,uint256)       </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >         transferFrom(address,address,uint256)         </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                approve(address,uint256)               </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                  getApproved(uint256)                 </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >            setApprovalForAll(address,bool)            </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >           isApprovedForAll(address,address)           </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >    safeTransferFrom(address,address,uint256,bytes)    </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               supportsInterface(bytes4)               </th><th scope='row' >  external  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >               supportsInterface(bytes4)               </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                     ['type()']                     </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                     constructor()                     </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                  ['constructor']                   </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                       _baseURI()                      </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                         []                         </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >              setTokenURI(uint256,string)              </th><th scope='row' >   public   </th><th scope='row' > ['onlyOwner'] </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >           ['_setTokenURI', 'onlyOwner']            </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                safeMint(address,string)               </th><th scope='row' >   public   </th><th scope='row' > ['onlyOwner'] </th><th scope='row' >   ['_tokenIdCounter']    </th><th scope='row' >            []            </th><th scope='row' >           ['_setTokenURI', '_safeMint']            </th><th scope='row' >                 ['_tokenIdCounter.current()', '_tokenIdCounter.increment()']                 </th></tr><tr><th scope='row' >                                                       </th><th scope='row' >            </th><th scope='row' >               </th><th scope='row' >                          </th><th scope='row' >                          </th><th scope='row' >                   ['onlyOwner']                    </th><th scope='row' >                                                                                              </th></tr><tr><th scope='row' >                     _burn(uint256)                    </th><th scope='row' >  internal  </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                     ['_burn']                      </th><th scope='row' >                                              []                                              </th></tr><tr><th scope='row' >                   tokenURI(uint256)                   </th><th scope='row' >   public   </th><th scope='row' >       []      </th><th scope='row' >            []            </th><th scope='row' >            []            </th><th scope='row' >                    ['tokenURI']                    </th><th scope='row' >                                              []                                              </th></tr></tbody>'</table><table class="table" width="100%" border="1"><thead><tr><th scope='col' width='25%' >  Modifiers  </th><th scope='col' width='10%' > Visibility </th><th scope='col' width='10%' > Read </th><th scope='col' width='10%' > Write </th><th scope='col' width='10%' >      Internal Calls      </th><th scope='col' width='10%' > External Calls </th></tr></thead><tbody><tr><th scope='row' > onlyOwner() </th><th scope='row' >  internal  </th><th scope='row' >  []  </th><th scope='row' >   []  </th><th scope='row' > ['_msgSender', 'owner']  </th><th scope='row' >       []       </th></tr><tr><th scope='row' >             </th><th scope='row' >            </th><th scope='row' >      </th><th scope='row' >       </th><th scope='row' > ['require(bool,string)'] </th><th scope='row' >                </th></tr></tbody>'</table><div>./files/fady-1652350000.sol analyzed (13 contracts)</div><br>